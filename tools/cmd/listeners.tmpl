// Code generated by /tools/cmd/generatelisteners.go; DO NOT EDIT.
//go:generate go run ../../tools/cmd/generatelisteners.go

package listeners

import (
    "encoding/json"
    "fmt"
    "github.com/TicketsBot-cloud/worker"
    "github.com/getsentry/sentry-go"
    "github.com/rxdn/gdl/gateway/payloads"
    "github.com/rxdn/gdl/gateway/payloads/events"
)

var (
    {{range .events}}
    {{.}}Listeners = []func(*worker.Context, events.{{.}}){}{{end}}
)

func HandleEvent(c *worker.Context, span *sentry.Span, payload payloads.Payload) error {
    if payload.Opcode != 0 { // Dispatch
        return fmt.Errorf("HandleEvent called with non-dispatch op-code: %d", payload.Opcode)
    }

    switch events.EventType(payload.EventName) {
    {{range .events}}
    case events.{{toScreamingSnakeCase .}}:
        var event events.{{.}}
        if err := json.Unmarshal(payload.Data, &event); err != nil {
            return err
        }

        for _, listener := range {{.}}Listeners {
            listener(c, event)
        }
    {{end}}
    default:
        return fmt.Errorf("Unknown event type: %s", payload.EventName)
    }

    return nil
}
